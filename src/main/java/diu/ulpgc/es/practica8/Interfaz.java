/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package diu.ulpgc.es.practica8;

import static diu.ulpgc.es.practica8.InternalFrameImage.umbral;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;

/**
 *
 * @author Jorge Santana
 */
public class Interfaz extends javax.swing.JFrame {
    private JFileChooser fc = new JFileChooser();
    private File file;
    private Mat imgOr;
    private BufferedImage img;
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes (*.jpg, *.png)", "jpg", "png");
    

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);        
        fc.addChoosableFileFilter(filter);
        escritorio.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(java.awt.event.ComponentEvent evt) {
                int width = escritorio.getWidth();
                int height = escritorio.getHeight();
        
                JInternalFrame[] ventanasInternas = escritorio.getAllFrames();
                for ( JInternalFrame ventana : ventanasInternas){
                    Point p = ventana.getLocation();
                    if(ventana.getX() > width || ventana.getY() > height) {
                        ventana.setLocation(width - 60, height - 60);
                    }
                }            
            }
            
            @Override
            public void componentMoved(ComponentEvent e) {
                return;
            }
            
            @Override
            public void componentShown(ComponentEvent e) {
                return;
            }
            
            @Override
            public void componentHidden(ComponentEvent e) {
                return;
            }
        });        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        abrirMenu = new javax.swing.JMenuItem();
        cerrarAppMenu = new javax.swing.JMenuItem();
        editarMenu = new javax.swing.JMenu();
        umbralMenu = new javax.swing.JMenuItem();
        cerrarVentanasMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        escritorio.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                escritorioComponentResized(evt);
            }
        });

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        archivoMenu.setText("Archivo");

        abrirMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrirMenu.setText("Abrir");
        abrirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuActionPerformed(evt);
            }
        });
        archivoMenu.add(abrirMenu);

        cerrarAppMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cerrarAppMenu.setText("Cerrar aplicación");
        cerrarAppMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarAppMenuActionPerformed(evt);
            }
        });
        archivoMenu.add(cerrarAppMenu);

        jMenuBar1.add(archivoMenu);

        editarMenu.setText("Editar");

        umbralMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        umbralMenu.setText("Umbralizar");
        umbralMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralMenuActionPerformed(evt);
            }
        });
        editarMenu.add(umbralMenu);

        cerrarVentanasMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cerrarVentanasMenu.setText("Cerrar Ventanas");
        cerrarVentanasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarVentanasMenuActionPerformed(evt);
            }
        });
        editarMenu.add(cerrarVentanasMenu);

        jMenuBar1.add(editarMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuActionPerformed
        int op = fc.showOpenDialog(null);
        if(op == JFileChooser.APPROVE_OPTION) {
            if (umbral != null){
                JInternalFrame[] ventanasInternas = escritorio.getAllFrames();
                for ( JInternalFrame ventana : ventanasInternas){
                    ventana.dispose();
                }
            }
            
            file = fc.getSelectedFile();
            imgOr = Imgcodecs.imread(file.getPath());
            img = (BufferedImage) HighGui.toBufferedImage(imgOr);
            InternalFrameImage ventana = new InternalFrameImage();
            escritorio.add(ventana);
            ventana.setLocation(new Point(30,20));
            ventana.setVisible(true);
            ventana.setPreferredSize(new Dimension(img.getWidth(),img.getHeight()));
            ventana.setTitle(file.getName());
            umbral.setImagen(img);
        }
    }//GEN-LAST:event_abrirMenuActionPerformed

    private void cerrarVentanasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarVentanasMenuActionPerformed
        JInternalFrame[] vectorV = escritorio.getAllFrames();
        for (JInternalFrame ventana : vectorV) {
            ventana.dispose();
        }
    }//GEN-LAST:event_cerrarVentanasMenuActionPerformed

    private void umbralMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralMenuActionPerformed
        String res = JOptionPane.showInputDialog(null, "Introduce el valor de umbralizado","Umbralizar", JOptionPane.QUESTION_MESSAGE);
        if(res != null) {
            try {
                int valor = Integer.parseInt(res);
                Mat imgMod = umbral.umbralizar(imgOr, valor);
                img = (BufferedImage) HighGui.toBufferedImage(imgMod);
                InternalFrameImage ventana = new InternalFrameImage();
                escritorio.add(ventana);
                ventana.setLocation(new Point(30,20));
                ventana.setVisible(true);
                ventana.setPreferredSize(new Dimension(img.getWidth(),img.getHeight()));
                ventana.setTitle(file.getName() + " / " + res);
                umbral.setImagen(img);                
            } catch(NumberFormatException ex) {
                JOptionPane.showMessageDialog(null,"El valor introducido debe ser númerico");
            }
        }
    }//GEN-LAST:event_umbralMenuActionPerformed

    private void cerrarAppMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarAppMenuActionPerformed
       int res = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la aplicación?", "Cerrar aplicación", JOptionPane.YES_NO_OPTION);
       if(res == JOptionPane.YES_OPTION) {
           dispose();
       }
    }//GEN-LAST:event_cerrarAppMenuActionPerformed

    private void escritorioComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_escritorioComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_escritorioComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirMenu;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenuItem cerrarAppMenu;
    private javax.swing.JMenuItem cerrarVentanasMenu;
    private javax.swing.JMenu editarMenu;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem umbralMenu;
    // End of variables declaration//GEN-END:variables
}
